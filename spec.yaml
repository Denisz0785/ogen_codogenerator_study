openapi: "3.0.2"
info:
  title: Expense management
  version: "1.0"
servers:
  - url: https://api.server.test/v1

components:
  securitySchemes:
    ApiKeyAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateUserRequest:
      properties:
        name:
          type: string
        surname:
          type: string
        login:
          type: string
        pass:
          type: string
        email:
          type: string
      required:
        - name
        - surname
        - login
        - pass
        - email
      type: object
    CreateUserResponse:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
    AuthRequest:
      properties:
        name:
          type: string
        pass:
          type: string
      required:
        - name
        - pass
      type: object
    AuthResponse:
      type: object
      properties:
        token:
          type: string
    AllExpenses:
      properties:
       data:
          items:
            $ref: '#/components/schemas/Expense'
          type: array
      type: object
    Expense:
      properties:
        id:
          type: integer
        expense_type_id:
          type: string
        reated_at:
          type: string
          format: date-time
          x-ogen-format: 2006-01-02T15:04:05
        spent_money:
          type: number
          format: double
      required:
      - id
      - expense_type_id
      - spent_money
      - time
      type: object
    ErrorResponse:
      properties:
        message:
          type: string
      type: object

paths:
  /auth/sign-up:
    post:
      tags:
      - registration
      summary: Creates a new user
      description: ''
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
  /auth/sign-in:
    post:
      tags:
      - authentification              
      summary: validate user
      description: ''
      operationId: signIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
  '/api/expenses':
    get:
      tags:
      - expenses
      summary: get all expenses of client by user Id
      description: Returns all expenses
      operationId: GetAllExpenses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllExpenses'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
    delete:
      tags:
      - expenses
      summary: Deletes an expense
      description: ''
      operationId: DeleteExpense
      parameters:
        - name: expenseID
          in: query
          description: expense id to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      security:
        - ApiKeyAuth: []
       
      
      

